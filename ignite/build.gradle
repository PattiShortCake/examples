plugins {
    alias(libs.plugins.lombok)
    alias(libs.plugins.spring.boot)
}

sourceCompatibility = JavaVersion.VERSION_11
targetCompatibility = JavaVersion.VERSION_11

dependencies {
    compileOnly 'org.projectlombok:lombok'
    annotationProcessor 'org.projectlombok:lombok'

//    implementation 'de.codecentric:spring-boot-admin-starter-client:2.4.3'

    implementation(libs.h2)
    implementation("org.apache.ignite:ignite-core")
    implementation("org.apache.ignite:ignite-indexing")
    implementation("org.apache.ignite:ignite-opencensus")
    implementation("org.apache.ignite:ignite-slf4j")
    implementation("org.apache.ignite:ignite-spring")

    implementation "org.springframework.boot:spring-boot-starter-actuator"
    implementation "org.springframework.boot:spring-boot-starter-security"
    implementation "org.springframework.boot:spring-boot-starter-web"

    // Sleuth
    implementation("org.springframework.cloud:spring-cloud-starter-sleuth")
    implementation("org.springframework.cloud:spring-cloud-sleuth-zipkin")
    implementation(libs.kryo5)

    implementation "org.springframework.kafka:spring-kafka"

    implementation 'io.micrometer:micrometer-core'

//    implementation "org.gridgain:control-center-agent:2.10.0.0"

    testImplementation "org.springframework.boot:spring-boot-starter-test"
}

test {
    useJUnitPlatform()
    jvmArgs("--add-exports=java.base/jdk.internal.misc=ALL-UNNAMED",
            "--add-exports=java.base/sun.nio.ch=ALL-UNNAMED",
            "--add-exports=java.management/com.sun.jmx.mbeanserver=ALL-UNNAMED",
            "--add-exports=jdk.internal.jvmstat/sun.jvmstat.monitor=ALL-UNNAMED",
            "--add-exports=java.base/sun.reflect.generics.reflectiveObjects=ALL-UNNAMED",
            "--add-opens=jdk.management/com.sun.management.internal=ALL-UNNAMED",
            "--illegal-access=permit"
    )
}

bootJar {
    launchScript()
}
